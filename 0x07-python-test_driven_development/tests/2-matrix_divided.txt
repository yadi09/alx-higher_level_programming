The "2-matrix_divided" module
=============================

Using "matrix_divided"
=============================

Importing the function from the module "2-matrix_divided":
	  >>> mrx_div = __import__('2-matrix_divided').matrix_divided

Correct output - case:
	>>> mrx = [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	>>> mrx_div(mrx, 3)
	[[0.11, 0.22, 0.33], [0.44, 0.56, 0.67]]
	>>> mrx = [[1, 2, 3], [4, 5, 6]]
	>>> mrx_div(mrx, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Correct output - case:
	>>> mrx = [[1, 2.57, 3], [4, 5.34, 6.56]]
	>>> mrx_div(mrx, 3)
	[[0.33, 0.86, 1.0], [1.33, 1.78, 2.19]]

Correct output - case:
	>>> mrx = [[1, 2, 3],[4, 5, 'A']]
	>>> mrx_div(mrx, 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Correct output - case:
	>>> mrx = [[1, 2, 3], [4, 5, 6]]
	>>> mrx_div(mrx, 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

Correct output - case:
        >>> mrx = [[1, 2, 3], [4, 5, 6]]
        >>> mrx_div(mrx, 3.34)
	[[0.3, 0.6, 0.9], [1.2, 1.5, 1.8]]

Correct output - case:
	>>> mrx = [[1, 2, 3], [4, 5, 6]]
        >>> mrx_div(mrx, 'A')
	Traceback (most recent call last):
	...
	TypeError: div must be a number

Correct output - case:
	>>> mrx = [[1, 2, 3], [4, 5, 6], (1, 2, 3)]
	>>> mrx_div(mrx, 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Correct output - case:
	>>> mrx = (1, 2, 3)
	>>> mrx_div(mrx, 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Correct output - case:
        >>> mrx = [[3]]
        >>> mrx_div(mrx, 3)
	[[1.0]]

Correct output - case:
        >>> mrx = [[3, 9], [12, 15]]
	>>> mrx_div(mrx, -3)
	[[-1.0, -3.0], [-4.0, -5.0]]

Correct output - case:
        >>> mrx = [[3, 9], [12, 15, 3]]
        >>> mrx_div(mrx, 3)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

Correct output - case:
        >>> mrx = [[3, 9], [12, 15]]
        >>> mrx_div(mrx, float('inf'))
	[[0.0, 0.0], [0.0, 0.0]]

Correct output - case:
	>>> mrx = [[1, 2, 3],[4, float('nan'), 6]]
	>>> mrx_div(mrx, 3)
	[[0.33, 0.67, 1.0], [1.33, nan, 2.0]]
