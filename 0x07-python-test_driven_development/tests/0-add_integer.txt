The "0-add_integer" module
==========================

Using "add_integer"
==========================

Importing the function from the module "0-add_integer":
	  >>> add = __import__('0-add_integer').add_integer

Correct output - case:
	  >>> add(1, 2)
	  3

Correct output - case:
	  >>> add(1, -2)
	  -1

Correct output - case:
	  >>> add(1.4, 2)
	  3

Correct output - case:
	  >>> add(1, "2")
	  Traceback (most recent call last):
	  ...
	  TypeError: b must be an integer

Correct output - case:
	  >>> add(3, int("A"))
	  Traceback (most recent call last):
	  ...
	  ValueError: invalid literal for int() with base 10: 'A'

Correct output - case:
	  >>> add(10, float('inf'))
	  Traceback (most recent call last):
	  ...
	  OverflowError: cannot convert float infinity to integer

Correct output - case:
	  >>> add(10, float('nan'))
	  Traceback (most recent call last):
	  ...
	  ValueError: cannot convert float NaN to integer

Correct output - case:
	  >>> add()
	  Traceback (most recent call last):
	  ...
	  TypeError: add_integer() missing 1 required positional argument: 'a'

Correct output - case:
	  >>> add(3)
	  101

Correct output - case:
	  >>> add(10, 20, 30)
	  Traceback (most recent call last):
	  ...
	  TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
